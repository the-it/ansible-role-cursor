# code: language=ansible
---
- name: Create config directories for users
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.file:
    path: '~{{ user.username }}/.cursor'
    state: directory
    mode: 'u=rwx,go=rx'
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user.username }}'
  when: "user.visual_studio_code_settings is defined and user.visual_studio_code_settings not in ({}, '', None, omit)"

- name: Create settings directory
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.file:
    path: '~{{ user.username }}/.cursor/User'
    state: directory
    mode: 'u=rwx,go='
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user.username }}'
  when: "user.visual_studio_code_settings is defined and user.visual_studio_code_settings not in ({}, '', None, omit)"

- name: Write settings
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.template:
    src: settings.json.j2
    dest: '~{{ user.username }}/.cursor/User/settings.json'
    force: '{{ user.visual_studio_code_settings_overwrite | default(False) | bool }}'
    mode: 'u=rw,go='
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user.username }}'
  when: >-
    (user.visual_studio_code_settings_overwrite | default(False) | bool)
    or (user.visual_studio_code_settings is defined
    and user.visual_studio_code_settings not in ({}, '', None, omit))

- name: Write keybindings
  become: true
  become_user: '{{ user.username }}'
  ansible.builtin.template:
    src: keybindings.json.j2
    dest: '~{{ user.username }}/.cursor/User/keybindings.json'
    force: '{{ user.visual_studio_code_keybindings_overwrite | default(False) | bool }}'
    mode: 'u=rw,go='
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user.username }}'
  when: >-
    (user.visual_studio_code_keybindings_overwrite | default(False) | bool)
    or (user.visual_studio_code_keybindings is defined
    and user.visual_studio_code_keybindings not in ([], '', None, omit))
